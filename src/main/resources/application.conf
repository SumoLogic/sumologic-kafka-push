sumopush: {
  kafka: {
    serdeClass: "com.sumologic.sumopush.serde.KubernetesLogEventSerde"
    serdeClass: ${?KAFKA_SERDE_CLASS_NAME}
    bootstrap.servers: "localhost:9092"
    bootstrap.servers: ${?KAFKA_BOOTSTRAP_SERVERS}
    topic: "logs"
    topic: ${?KAFKA_TOPIC}
    groupId: "sumopush"
    groupId: ${?KAFKA_CONSUMER_GROUP_ID}
    auto.offset.reset: "earliest"
    auto.offset.reset: ${?KAFKA_AUTO_OFFSET_RESET}
  }
  cluster: "default"
  cluster: ${?CLUSTER_NAME}
  dataType: "logs"
  dataType: ${?DATA_TYPE}
  apiRetry: {
    initDelay: 2
    initDelay: ${?API_RETRY_INIT_DELAY}
    delayFactor: 1.5
    delayFactor: ${?API_RETRY_DELAY_FACTOR}
    delayMax: 120000
    delayMax: ${?API_RETRY_DELAY_MAX}
    maxAttempts: 10
  }
  metricsPort: 8080
  metricsPort: ${?METRICS_SERVER_PORT}
  encoding: "gzip"
  encoding: ${?HTTP_ENCODING}
  streams.max: 100000
  grouped.size: 1000
  grouped.size: ${?GROUPED_SIZE}
  grouped.duration: 1s
  grouped.duration: ${?GROUPED_DURATION}
  send.buffer: 100000
  send.buffer: ${?SEND_BUFFER}
  container.exclusions: ""
  container.exclusions: ${?CONTAINER_EXCLUSIONS}
  logs: {
    endpoint.names: ""
    endpoint.names: ${?ENDPOINT_NAMES}
    source.names: ""
    source.names: ${?SOURCE_NAMES}
    source.categories: ""
    source.categories: ${?SOURCE_CATEGORIES}
  }
}
akka: {
  loglevel: "INFO"
  coordinated-shutdown.phases.actor-system-terminate.timeout: 60s
  kafka.consumer: {
    commit-timeout: 30s
    commit-timeout: ${?KAFKA_CONSUMER_COMMIT_TIMEOUT}
    stop-timeout: 0
  }
  http.host-connection-pool: {
    max-connections: 50
    max-connections: ${?MAX_HTTP_CONNECTIONS}
    max-open-requests: 32
    max-open-requests: ${?MAX_HTTP_OPEN_REQUESTS}
  }
  kafka.committer: {
    max-batch: 10000
    max-batch: ${?KAFKA_MAX_BATCH_COMMIT}
  }
}
endpoints: {
  logs: {
    uri: ${?SUMO_LOGS_URI}
    default: true
  }
  metrics: {
    uri: ${?SUMO_METRICS_URI}
    default: true
  }
}